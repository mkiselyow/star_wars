{"version":3,"sources":["services/SwapiService/SwapiService.js","services/DummySwapiService/DummySwapiService.js","components/Header/Header.js","components/Spinner/Spinner.js","components/Img/Img.js","components/DetailsContent/DetailsContent.js","components/Error/Error.js","components/swapi-service-context/swapi-service-context.js","components/hoc-helpers/withSwapiService.js","components/RandomPlanet/RandomPlanet.js","components/Title/Title.js","components/hoc-helpers/withData.js","components/ItemList/ItemList.js","components/ItemDetails/ItemDetails.js","components/ErrorBoundary/ErrorBoundary.js","components/ItemsPage/ItemsPage.js","components/SecretPage/SecretPage.js","components/LoginPage/LoginPage.js","components/Routes/Routes.js","components/App/App.js","index.js"],"names":["SwapiService","_url","getAllResources","_getAllResources","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resourceType","url","resources","_this","this","_args","arguments","wrap","_context","prev","next","length","undefined","concat","fetch","sent","json","abrupt","results","map","resource","decorate","stop","apply","getResourceById","_getResourceById","_callee2","id","isImageExists","_args2","_context2","imageExists","_imageExists","_callee3","resp","_context3","status","_x","_x2","getId","objectToDecorate","match","name","population","rotationPeriod","rotation_period","diameter","typeOfItem","cargo_capacity","passengers","hyperdrive_rating","gender","mass","height","hairColor","hair_color","skinColor","skin_color","eyeColor","eye_color","birthYear","birth_year","homeWorld","homeworld","films","join","species","vehicles","starships","DummySwapiService","t0","_people","_starships","_planets","imgUrl","find","person","getPersonImage","starship","getStarshipImage","planet","getPlanetImage","model","manufacturer","costInCredits","crew","ListItem","_ref2","title","route","onClick","TagName","Link","react_default","createElement","className","to","Header","_ref","onToggleAPI","Header_ListItem","Spinner","style","width","Img","isFullDescription","src","alt","DetailsContent","obj","_this$props$item","props","item","properties","objectWithoutProperties","_this$props","rows","DetailsContent_Rows","propertiesObj","mapPropertiesNames","Fragment","components_Img_Img","Component","Row","propertyName","propertyValue","scope","Rows","property","index","tmp","DetailsContent_Row","key","Error","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","Wrapped","swapiService","assign","state","error","onError","err","console","log","setState","clearInterval","intervalId","onNoError","updatePlanet","setInterval","bind","assertThisInitialized","_this2","Math","floor","random","then","objectSpread","catch","_this$state","isPlanetEmpty","values","isError","content","DetailsContent_DetailsContent","spinner","components_Spinner_Spinner","errorMsg","components_Error_Error","Title","activeLetterClass","text","activeLetter","setTimeout","nextActiveLetter","prevState","counter","split","char","isActive","wrapLetters","react_router_dom","withData","View","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","data","inherits","createClass","value","prevProps","updateData","itemsType","items","ItemListLink","renderItem","withRouter","history","ItemList_ItemListLink","href","push","prepareList","errorMessage","ItemDetails","fetchingNextObj","params","fetchItem","itemType","boolean","isItemEmpty","isItemSelected","ErrorBoundary","hasError","errorInfo","children","selectedItem","itemDetails","components_ItemDetails_ItemDetails","ErrorBoundary_ErrorBoundary","components_ItemList_ItemList","SecretPage","isLoggedIn","react_router","LoginPage","onLogin","Routes","routes","path","render","exact","component","components_SecretPage_SecretPage","components_LoginPage_LoginPage","components_ItemsPage_ItemsPage","App","isFetchInProgress","changeProgress","document","getElementById","visibility","body","message","Title_Title_Title","components_Header_Header","role","aria-valuenow","aria-valuemin","aria-valuemax","components_RandomPlanet_RandomPlanet","components_Routes_Routes","ReactDOM","App_App_App"],"mappings":"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","file":"static/js/main.fccf0670.chunk.js","sourcesContent":["const SwapiService = {\n  _url: 'https://swapi.co/api',\n\n  async getAllResources(resourceType = 'people') {\n    const url = `${this._url}/${resourceType}/`;\n    const resources = await (await fetch(url)).json();\n    return resources.results.map(resource => this.decorate(resourceType, resource))\n  },\n\n  async getResourceById(resourceType = 'people', id) {\n    const url = `${this._url}/${resourceType}/${id}`;\n    const resource = await (await fetch(url)).json();\n    const isImageExists = await this.imageExists(resourceType, id);\n    return this.decorate(resourceType, resource, isImageExists)\n  },\n\n  async imageExists(resource, id) {\n    if (resource === 'people') {\n      resource = 'characters'\n    }\n\n    const url =\n      `https://starwars-visualguide.com/assets/img/${resource}/${id}.jpg`;\n    const resp = await fetch(url);\n    return (resp.status !== 404) ? url : false;\n  },\n\n  getId(objectToDecorate) {\n    return objectToDecorate.url.match(/\\/([0-9]*)\\/$/)[1]\n  },\n\n  decorate(resource, objectToDecorate, isImageExists = false) {\n    switch (resource) {\n      case 'planets':\n        return {\n          id: this.getId(objectToDecorate),\n          name: objectToDecorate.name,\n          population: objectToDecorate.population,\n          rotationPeriod: objectToDecorate.rotation_period,\n          diameter: objectToDecorate.diameter,\n          imageExists: isImageExists,\n          typeOfItem: 'planets'\n          };\n      case 'starships':\n        return {\n          id: this.getId(objectToDecorate),\n          name: objectToDecorate.name,\n          cargo_capacity: objectToDecorate.cargo_capacity,\n          passengers: objectToDecorate.passengers,\n          hyperdrive_rating: objectToDecorate.hyperdrive_rating,\n          imageExists: isImageExists,\n          typeOfItem: 'starships'\n        };\n      case 'people':\n        return {\n          id: this.getId(objectToDecorate),\n          name: objectToDecorate.name,\n          gender: objectToDecorate.gender,\n          mass: objectToDecorate.mass,\n          height: objectToDecorate.height,\n          imageExists: isImageExists,\n          typeOfItem: 'people',\n          hairColor: objectToDecorate.hair_color,\n          skinColor: objectToDecorate.skin_color,\n          eyeColor: objectToDecorate.eye_color,\n          birthYear: objectToDecorate.birth_year,\n          homeWorld: objectToDecorate.homeworld,\n          films: objectToDecorate.films.join('\\n'),\n          species: objectToDecorate.species.join('\\n'),\n          vehicles: objectToDecorate.vehicles.join('\\n'),\n          starships: objectToDecorate.starships.join('\\n')\n        };\n      default:\n        return objectToDecorate;\n    }\n  }\n};\n\nexport default SwapiService;","const DummySwapiService = {\r\n  async getAllResources(resourceType = 'people') {\r\n    let resources;\r\n    switch (resourceType) {\r\n      case \"people\":\r\n        resources = this._people;\r\n        break;\r\n      case \"starships\":\r\n        resources = this._starships;\r\n        break;\r\n      case \"planets\":\r\n        resources = this._planets;\r\n        break;\r\n      default:\r\n        resources = this._people;\r\n        break;\r\n    }\r\n    return resources.map(resource => this.decorate(resourceType, resource))\r\n  },\r\n\r\n  async getResourceById(resourceType = 'people', id) {\r\n    let resource, imgUrl;\r\n    switch (resourceType) {\r\n      case \"people\":\r\n        resource = this._people.find((person) => person.id === id);\r\n        imgUrl = this.getPersonImage();\r\n        break;\r\n      case \"starships\":\r\n        resource = this._starships.find((starship) => starship.id === id);\r\n        imgUrl = this.getStarshipImage();\r\n        break;\r\n      case \"planets\":\r\n        resource = this._planets.find((planet) => planet.id === id);\r\n        imgUrl = this.getPlanetImage();\r\n        break;\r\n      default:\r\n        resource = this._people.find((person) => person.id === id);\r\n        imgUrl = this.getPersonImage();\r\n        break;\r\n    }\r\n    return resource ? this.decorate(resourceType, resource, imgUrl) : undefined;\r\n  },\r\n\r\n  decorate(resource, objectToDecorate, isImageExists = false) {\r\n    switch (resource) {\r\n      case 'planets':\r\n        return {\r\n          id: objectToDecorate.id,\r\n          name: objectToDecorate.name,\r\n          population: objectToDecorate.population,\r\n          rotationPeriod: objectToDecorate.rotation_period,\r\n          diameter: objectToDecorate.diameter,\r\n          imageExists: isImageExists,\r\n          typeOfItem: 'planets'\r\n        };\r\n      case 'starships':\r\n        return {\r\n          id: objectToDecorate.id,\r\n          name: objectToDecorate.name,\r\n          cargo_capacity: objectToDecorate.cargo_capacity,\r\n          passengers: objectToDecorate.passengers,\r\n          hyperdrive_rating: objectToDecorate.hyperdrive_rating,\r\n          imageExists: isImageExists,\r\n          typeOfItem: 'starships'\r\n        };\r\n      case 'people':\r\n        return {\r\n          id: objectToDecorate.id,\r\n          name: objectToDecorate.name,\r\n          gender: objectToDecorate.gender,\r\n          mass: objectToDecorate.mass,\r\n          height: objectToDecorate.height,\r\n          imageExists: isImageExists,\r\n          typeOfItem: 'people'\r\n        };\r\n      default:\r\n        return objectToDecorate;\r\n    }\r\n  },\r\n\r\n  _people: [\r\n    {\r\n      id: 1,\r\n      name: 'Bilbo Baggins [TEST DATA]',\r\n      gender: 'male',\r\n      mass: '199',\r\n      height: '100',\r\n      birthYear: 'long ago',\r\n      eyeColor: 'dark brown'\r\n    },\r\n\r\n    {\r\n      id: 2,\r\n      name: 'Frodo Baggins [TEST DATA]',\r\n      gender: 'male',\r\n      mass: '199',\r\n      height: '100',\r\n      birthYear: 'long ago',\r\n      eyeColor: 'dark brown'\r\n    }\r\n  ],\r\n\r\n  _planets: [\r\n    {\r\n      id: 1,\r\n      name: 'Earth [TEST DATA]',\r\n      population: '7.530.000.000',\r\n      rotation_period: '23 hours 56 seconds',\r\n      diameter: '12.742 km'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Venus [TEST DATA]',\r\n      population: 'not known',\r\n      rotationPeriod: '243 days',\r\n      diameter: '12.104 km'\r\n    }\r\n  ],\r\n\r\n  _starships: [\r\n    {\r\n      id: 1,\r\n      name: 'USS Enterprise [TEST DATA]',\r\n      model: 'NCC-1701-C',\r\n      manufacturer: 'Northrop Grumman Shipbuilding',\r\n      costInCredits: 'not known',\r\n      length: 'approx 300 meters',\r\n      crew: 1000,\r\n      hyperdrive_rating: 4,\r\n      passengers: 50,\r\n      cargo_capacity: 100\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'BLA-BLA Enterprise [TEST DATA]',\r\n      model: 'NCC-1701-C',\r\n      manufacturer: 'Northrop Grumman Shipbuilding',\r\n      costInCredits: 'not known',\r\n      length: 'approx 300 meters',\r\n      crew: 1000,\r\n      hyperdrive_rating: 4,\r\n      passengers: 50,\r\n      cargo_capacity: 100\r\n    }\r\n  ],\r\n\r\n  getPersonImage: () => {\r\n    return `https://placeimg.com/400/500/people`\r\n  },\r\n\r\n  getStarshipImage: () => {\r\n    return `https://placeimg.com/600/400/tech`;\r\n  },\r\n\r\n  getPlanetImage: () => {\r\n    return `https://placeimg.com/400/400/nature`\r\n  },\r\n};\r\n\r\nexport default DummySwapiService;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.css';\n\nconst Header = ({onToggleAPI}) => {\n  return (\n    <header className='header'>\n      <ul className=\"nav nav-list-item-container\">\n        <ListItem title=\"People\"\n                  route=\"/people/\"/>\n        <ListItem title=\"Planets\"\n                  route=\"/planets/\"/>\n        <ListItem title=\"Ships\"\n                  route=\"/starships/\"\n        />\n        <ListItem title=\"Login Page\"\n                  route=\"/login\"\n        />\n        <ListItem title=\"Secret Page\"\n                  route=\"/secret\"\n        />\n        <ListItem\n          title=\"Toggle API\"\n          onClick={onToggleAPI}\n        />\n      </ul>\n    </header>\n  )\n};\n\nconst ListItem = ({title, route, onClick}) => {\n  const TagName = route ? Link : 'a';\n  return (\n    <li className={`nav-item`}>\n      <TagName to={route}\n        className=\"nav-link nav-list-item\"\n        onClick={onClick}\n      >{title}</TagName>\n    </li>\n  )\n};\n\nexport default Header;","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css ng-scope mt-3\">\n      <div className=\"lds-spinner\" style={{width: '100%', height: '100%'}}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n};\n\nexport default Spinner;","import React from 'react';\n\nimport './Img.css';\n\nconst Img = ({imgUrl, isFullDescription}) => {\n  const className = isFullDescription\n    ?'full-description-img' : 'random-planet-img';\n  return (\n    <div className='col-12 col-sm-6 d-flex justify-content-center align-items-center'>\n      <img\n        className={`rounded my-2 ${className}`}\n        src={imgUrl} alt=\"\"/>\n    </div>\n  )\n};\n\nexport default Img;","import React, {Component} from \"react\";\nimport Img from \"../Img/Img\";\n\n\nexport default class DetailsContent extends Component {\n  mapPropertiesNames(obj) {\n    if (obj.typeOfItem === \"people\") {\n      return [\n        ['Gender', obj.gender],\n        ['Mass', obj.mass],\n        ['Height', obj.height],\n        ['Hair color', obj.hairColor],\n        ['Skin color', obj.skinColor],\n        ['Eye color', obj.eyeColor],\n        ['Birth year', obj.birthYear],\n        ['Home world', obj.homeWorld],\n        ['Films', obj.films],\n        ['Species', obj.species],\n        ['Vehicles', obj.vehicles],\n        ['Star ships', obj.starships]\n      ];\n    } else if (obj.typeOfItem === \"planets\") {\n      return [\n        ['Population', obj.population],\n        ['Rotation Period', obj.rotationPeriod],\n        ['Diameter', obj.diameter]\n      ];\n    } else if (obj.typeOfItem === \"starships\") {\n      return [\n        ['Cargo Capacity', obj.cargo_capacity],\n        ['Passengers', obj.passengers],\n        ['Hyperdrive Rating', obj.hyperdrive_rating]\n      ];\n    }\n  }\n\n  render() {\n    const {id, name, ...properties} = this.props.item;\n    const { imageExists, isFullDescription } = this.props;\n    const rows = <Rows propertiesObj={this.mapPropertiesNames}\n                       properties={properties}\n                       isFullDescription={isFullDescription}/>;\n\n    return (\n      <React.Fragment>\n        {imageExists\n          ? <Img imgUrl={imageExists}\n                 isFullDescription={isFullDescription}/>\n          : null}\n        <div className='col-12 col-sm-6 d-flex flex-column justify-content-center align-content-middle'>\n          <header className='my-3'>\n            <span>{name}</span>\n          </header>\n          <table className=\"table table-hover\">\n            {rows}\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Row = ({propertyName, propertyValue}) => {\n  return (\n    <tr className=\"table-active\">\n      <th scope=\"row\">\n        {propertyName}\n      </th>\n      <td>\n        {propertyValue}\n      </td>\n    </tr>\n  )\n};\n\nconst Rows = ({propertiesObj, properties, isFullDescription}) => {\n  const rows = propertiesObj(properties)\n    .map((property, index) => {\n      let tmp;\n      if (isFullDescription || (!isFullDescription && index < 3)) {\n        tmp = (\n        <Row\n          key={index}\n          propertyName={property[0]}\n          propertyValue={property[1]}\n        />)}\n      return tmp;\n  });\n\n  return (\n    <tbody>\n      {rows}\n    </tbody>\n  )\n};","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div className='my-2 alert alert-dismissible alert-danger text-center'>\n      Something went wrong!\n    </div>\n  )\n};\n\nexport default Error;","import React from 'react';\r\n\r\nconst {\r\n  Provider :SwapiServiceProvider,\r\n  Consumer :SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport { SwapiServiceProvider, SwapiServiceConsumer };","import React from 'react';\r\nimport { SwapiServiceConsumer} from \"../swapi-service-context/swapi-service-context\";\r\n\r\nconst withSwapiService = (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <SwapiServiceConsumer>\r\n      {\r\n        (swapiService) => {\r\n          return (\r\n            <Wrapped {...props} swapiService={swapiService}/>\r\n          )\r\n        }\r\n      }\r\n    </SwapiServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withSwapiService;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../Spinner/Spinner';\nimport DetailsContent from '../DetailsContent/DetailsContent';\nimport Error from '../Error/Error';\nimport withSwapiService from '../hoc-helpers/withSwapiService';\n\nimport './RandomPlanet.css';\n\nclass RandomPlanet extends Component {\n\n  static propTypes = {\n    swapiService: PropTypes.object\n  };\n\n  state = {\n    id: null,\n    name: null,\n    typeOfItem: null,\n    error: false,\n    imageExists: false\n  };\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.intervalId = setInterval(\n      this.updatePlanet.bind(this),\n      5000);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  };\n\n  onError = (err) => {\n    console.log(err + ' === in random planet');\n    this.setState({error: true});\n    clearInterval(this.intervalId);\n  };\n\n  onNoError = () => {\n    this.setState({error: false});\n    this.updatePlanet();\n    this.intervalId = setInterval(\n      this.updatePlanet.bind(this),\n      5000);\n  };\n\n  updatePlanet() {\n    const id = Math.floor(Math.random()*25) + 2;\n    this.props.swapiService\n      .getResourceById('planets', id)\n      .then((item) => {\n        this.setState({...item});\n        if (this.state.error) {\n          this.onNoError();\n        }\n      })\n      .catch((err) => this.onError(err));\n  };\n\n  render() {\n    const {error, imageExists, ...item} = this.state;\n    const isPlanetEmpty = !!Object.values(item).join('');\n    const isError = error;\n    const content = isPlanetEmpty\n      ? <DetailsContent\n        imageExists={imageExists}\n        item={{...item}}/>\n      : null;\n    const spinner = !isPlanetEmpty && !isError\n      ? <Spinner/>\n      : null;\n    const errorMsg = isError\n      ? <Error/>\n      : null;\n\n    return (\n      <article className='random-planet-content container bg-gray rounded'>\n        <div className='row d-flex justify-content-center align-items-center'>\n          {spinner}\n          {content}\n          {errorMsg}\n        </div>\n      </article>\n    )\n  }\n};\n\nexport default withSwapiService(RandomPlanet);","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './Title.css';\r\n\r\nexport default class Title extends Component {\r\n  activeLetterClass = 'char-active';\r\n\r\n  state = {\r\n    text: 'Star Wars Database',\r\n    activeLetter: 0\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.intervalId = setTimeout(this.nextActiveLetter.bind(this), 1000);\r\n\r\n  };\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.activeLetter !== this.state.activeLetter) {\r\n      clearInterval(this.intervalId);\r\n      this.intervalId = setTimeout(this.nextActiveLetter.bind(this), 1000);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  nextActiveLetter() {\r\n    this.setState(({text, activeLetter}) => {\r\n      return {\r\n        activeLetter: (text.length > activeLetter) ? ++activeLetter : 0\r\n      }\r\n    })\r\n  };\r\n\r\n  wrapLetters() {\r\n    const {text, activeLetter} = {...this.state};\r\n    let counter = 0;\r\n\r\n    return text.split('').map((char, index) => {\r\n      let isActive = null;\r\n\r\n      if (char !== ' ') {\r\n        isActive = activeLetter === counter ? this.activeLetterClass : null;\r\n        counter++;\r\n      }\r\n\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`char-item ${isActive}`}>{char}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const text = this.wrapLetters();\r\n    return (\r\n      <Link\r\n        to={\"/\"}\r\n        className='my-3 word-wrapper title-link'\r\n      >{text}</Link>\r\n    );\r\n  }\r\n};","import React, {Component} from 'react';\r\n\r\n\r\nconst withData = (View) => {\r\n  return class extends Component {\r\n\r\n    state = {\r\n      data: null\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.swapiService !== prevProps.swapiService) {\r\n        this.updateData.call(this);\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.updateData.call(this);\r\n    };\r\n\r\n    updateData() {\r\n      this.setState({data: null});\r\n      this.props.swapiService\r\n        .getAllResources(this.props.itemsType)\r\n        .then((items) => {\r\n          this.setState({data: items});\r\n        })\r\n        .catch(this.onError);\r\n    };\r\n\r\n    onError = () => {\r\n      this.setState({error: true});\r\n    };\r\n\r\n    render() {\r\n      const props = this.props;\r\n      const { data } = this.state;\r\n\r\n      return <View {...props} data={data}/>;\r\n    }\r\n  }\r\n};\r\n\r\nexport default withData;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport './ItemList.css';\nimport Spinner from \"../Spinner/Spinner\"\nimport Error from \"../Error/Error\";\nimport withData from \"../hoc-helpers/withData\";\nimport withSwapiService from \"../hoc-helpers/withSwapiService\";\n\nconst ItemList = ({data, error, history, itemsType}) => {\n  const onItemSelected = (id) => {\n    history.push(`/${itemsType}/selectedItem/${id}`);\n  };\n\n  const prepareList = () => {\n    if (data) {\n      return data.map((item) => {\n        return (\n          <ItemListLink\n            key={item.id}\n            href={\"#\"}\n            title={renderItem.call(this, item)}\n            id={item.id}\n            onClick={() => onItemSelected(item.id)}\n          />\n        )\n      })\n    }\n  };\n\n  const content = data ? prepareList() : null;\n  const spinner = (!data && !error) ? <Spinner/> : null;\n  const errorMessage = error ? <Error/> : null;\n\n  return (\n    <article className='itemList my-2'>\n      <ul className='list-group'>\n        {spinner}\n        {content}\n        {errorMessage}\n      </ul>\n    </article>\n  )\n};\n\nconst ItemListLink = ({title, onClick}) => {\n  return (\n    <li\n      onClick={onClick}\n      className='list-group-item d-flex justify-content-between align-items-center hover-color'>\n      <div className='item-list-item-link'>\n        {title}\n      </div>\n    </li>\n  )\n};\n\nconst renderItem = function(item) {\n  switch (item.itemsType) {\n    case 'people':\n      return `${item.name} (gender: ${item.gender})`;\n    case 'starships':\n      return `${item.name} (cargo capacity: ${item.cargo_capacity})`;\n    case 'planets':\n      return `${item.name} (diameter: ${item.diameter})`;\n    default:\n      return item.name;\n  }\n};\n\nexport default withRouter(withSwapiService(withData(ItemList)));","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Spinner from '../Spinner/Spinner';\nimport DetailsContent from '../DetailsContent/DetailsContent';\n\nimport './ItemDetails.css';\nimport Error from \"../Error/Error\";\nimport withSwapiService from '../hoc-helpers/withSwapiService';\n\nclass ItemDetails extends Component {\n\n  state = {\n    id: null,\n    name: null,\n    typeOfItem: null,\n    error: false,\n    imageExists: false,\n    fetchingNextObj: false\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.swapiService !== prevProps.swapiService) {\n      this.fetchingNextObj(false);\n    }\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    if (match.params.id) {\n      this.fetchItem(this.props.itemType);\n    }\n  };\n\n  fetchingNextObj(boolean) {\n    this.setState({fetchingNextObj: boolean})\n  };\n\n  onError = () => {\n    this.setState({error: true});\n  };\n\n  onNoError = () => {\n    this.setState({error: false});\n  };\n\n  fetchItem(itemType) {\n    this.fetchingNextObj(true);\n    const { match } = this.props;\n    this.props.swapiService\n      .getResourceById(itemType, match.params.id)\n      .then((item) => {\n        this.setState({...item});\n        this.fetchingNextObj(false);\n        if (this.state.error) {\n          this.onNoError();\n        }\n      })\n      .catch((err) => this.onError(err));\n  };\n\n  render() {\n    const {error, imageExists, fetchingNextObj, ...item} = this.state;\n    const isItemEmpty = !fetchingNextObj && !!Object.values(item).join('');\n    const isError = error;\n    const { isFullDescription, match } = this.props;\n    const isItemSelected = match.params.id;\n    const content = isItemEmpty\n      ? <DetailsContent\n        imageExists={imageExists}\n        item={{...item}}\n        isFullDescription={isFullDescription}\n      />\n      : null;\n    const spinner = !isItemEmpty && !isError && isItemSelected\n      ? <Spinner/>\n      : null;\n    const errorMsg = isError\n      ? <Error/>\n      : null;\n\n    return (\n      <article className='person-details container bg-gray rounded'>\n        <div className='my-2 row d-flex justify-content-center align-items-center'>\n          {spinner}\n          {content}\n          {errorMsg}\n        </div>\n      </article>\n    )\n  }\n}\n\nexport default withRouter(withSwapiService(ItemDetails));","import React, {Component} from 'react';\r\nimport Error from '../Error/Error';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      hasError: true\r\n    })\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <Error/>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n\r\n}","import React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport ItemList from '../ItemList/ItemList';\nimport ItemDetails from '../ItemDetails/ItemDetails';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nconst ItemsPage = ({itemsType, match}) => {\n  const selectedItem = match.params.id;\n  const itemDetails = selectedItem\n    ? <Link to={`/${itemsType}/${selectedItem}`}>\n        <ItemDetails\n          itemType={itemsType}/>\n      </Link>\n    : null;\n\n  return (\n    <ErrorBoundary>\n      <div className='row mb2'>\n        <div className='col-md-6'>\n          <ItemList\n            itemsType={itemsType}\n          />\n        </div>\n        <div className='col-md-6'>\n          {itemDetails}\n        </div>\n      </div>\n    </ErrorBoundary>\n  )\n};\n\nexport default withRouter(ItemsPage);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SecretPage = ({isLoggedIn}) => {\r\n  if (isLoggedIn) {  return (\r\n    <div className=\"jumbotron text-center my-3\">\r\n      <h3>This page is full of secrers!!!</h3>\r\n    </div>\r\n  );}\r\n\r\n  return <Redirect to='/login'/>;\r\n};\r\n\r\nexport default SecretPage;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginPage = ({ isLoggedIn, onLogin}) => {\r\n  if (isLoggedIn) {\r\n    return <Redirect to='/secret' />;\r\n  }\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"jumbotron text-center my-3\">\r\n        <h3>Login to the secret page</h3>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={onLogin}>\r\n          Login\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <p>You are logged in.</p>\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport ItemsPage from \"../ItemsPage/ItemsPage\";\r\nimport ItemDetails from \"../ItemDetails/ItemDetails\";\r\nimport SecretPage from  \"../SecretPage/SecretPage\";\r\nimport LoginPage from  \"../LoginPage/LoginPage\";\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nconst Routes = ({isLoggedIn, onLogin}) => {\r\n  const routes = ['planets', 'starships', 'people'];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <Route path=\"/\"\r\n               render={\r\n                 () => { return (\r\n                   <h2 className=\"text-center my-3\">\r\n                     Welcome to initial page\r\n                   </h2>)}}\r\n               exact/>\r\n        <Route path={`/secret/`}\r\n               component={() =>\r\n                 <SecretPage isLoggedIn={isLoggedIn}/>}\r\n               exact\r\n        />\r\n        <Route path={`/login/`}\r\n               component={() =>\r\n                 <LoginPage isLoggedIn={isLoggedIn}\r\n                            onLogin={() => {onLogin()}}\r\n                 />}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[0]}/selectedItem/:id?`}\r\n               component={() =>\r\n                 <ItemsPage itemsType={routes[0]}/>}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[0]}/`}\r\n               component={() =>\r\n                 <ItemsPage itemsType={routes[0]}/>}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[0]}/:id([0-9]+)`}\r\n               render={() => {\r\n                 return <ItemDetails itemType={routes[0]}\r\n                                     isFullDescription={true}\r\n                 />}}\r\n        />\r\n        <Route path={`/${routes[1]}/selectedItem/:id?`}\r\n               component={() =>\r\n                 <ItemsPage itemsType={routes[1]}/>}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[1]}/`}\r\n               component={() =>\r\n                 <ItemsPage itemsType={routes[1]}/>}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[1]}/:id([0-9]+)`}\r\n               render={() => {\r\n                 return <ItemDetails itemType={routes[1]}\r\n                                     isFullDescription={true}\r\n                 />}}\r\n        />\r\n        <Route path={`/${routes[2]}/selectedItem/:id?`}\r\n               component={() =>\r\n                 <ItemsPage itemsType={routes[2]}/>}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[2]}/`}\r\n               component={() =>\r\n                 <ItemsPage itemsType={routes[2]}/>}\r\n               exact\r\n        />\r\n        <Route path={`/${routes[2]}/:id([0-9]+)`}\r\n               render={() => {\r\n                 return <ItemDetails itemType={routes[2]}\r\n                                     isFullDescription={true}\r\n                 />}}\r\n        />\r\n        <Redirect to=\"/\"/>\r\n      </Switch>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Routes;","import React, {Component} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport SwapiService from '../../services/SwapiService/SwapiService';\nimport DummySwapiService from '../../services/DummySwapiService/DummySwapiService';\nimport Header from '../Header/Header';\nimport RandomPlanet from \"../RandomPlanet/RandomPlanet\";\nimport Title from '../Title/Title';\nimport {SwapiServiceProvider} from '../swapi-service-context/swapi-service-context';\nimport Routes from '../Routes/Routes';\n\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    swapiService: SwapiService,\n    isLoggedIn: false\n  };\n\n  onLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    })\n  };\n\n  isFetchInProgress = false;\n\n  changeProgress = (boolean) => {\n    this.isFetchInProgress = boolean;\n    if (document.getElementById('progress')) {\n      document.getElementById('progress')\n        .style.visibility = this.isFetchInProgress ? 'visible' : 'hidden';\n    }\n  };\n\n  onToggleAPI = () => {\n    this.setState(({swapiService}) => {\n      const newState = swapiService === SwapiService ? DummySwapiService : SwapiService;\n      return {\n        swapiService: newState\n      }\n    })\n  };\n\n  render() {\n    const { isLoggedIn, swapiService } = this.state;\n    this.changeProgress(true);\n    (this.state.swapiService).getAllResources('planets')\n      .then((body) => {\n        this.changeProgress(false);\n        console.log(body);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        this.changeProgress(false);\n      });\n\n    return (\n      <div className='app container'>\n        <SwapiServiceProvider value={swapiService}>\n          <Router>\n            <Title/>\n            <Header onToggleAPI={this.onToggleAPI}/>\n            <div  className='d-flex justify-content-center align-items-center m-3'>\n              <div\n                className=\"progress\"\n                style={{width: '35%'}}\n                id='progress'\n              >\n                <div\n                  className=\"progress-bar progress-bar-striped progress-bar-animated\"\n                  role=\"progressbar\"\n                  aria-valuenow=\"75\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  style={{width: '100%'}}\n                > </div>\n              </div>\n            </div>\n\n            <RandomPlanet/>\n            <Routes isLoggedIn={isLoggedIn} onLogin={this.onLogin}/>\n          </Router>\n        </SwapiServiceProvider>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}