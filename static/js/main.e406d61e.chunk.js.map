{"version":3,"sources":["services/SwapiService/SwapiService.js","services/CssGoesOverChars/CssGoesOverChars.js","components/Header/Header.js","components/Spinner/Spinner.js","components/Img/Img.js","components/DetailsContent/DetailsContent.js","components/Error/Error.js","components/RandomPlanet/RandomPlanet.js","components/ItemList/ItemList.js","components/PersonDetails/PersonDetails.js","components/PeoplePage/PeoplePage.js","components/App/App.js","index.js"],"names":["SwapiService","_url","resource","id","full_url","this","fetch","res_full","json","then","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","body","wrap","_context","prev","next","ok","Error","concat","status","_this","imageExists","sent","abrupt","Decorator","results","map","el","stop","_x","apply","arguments","catch","err","console","log","message","url","res","objectToDecorate","match","getId","name","population","rotationPeriod","rotation_period","diameter","typeOfItem","cargo_capacity","passengers","gender","mass","CssGoesOverChars","elementId","article","document","getElementById","text","innerHTML","split","char","join","classList","add","nodes","querySelector","children","_loop","i","_n","charAt","setTimeout","invokeClassToggle","remove","replace","length","n","Link","href","title","react_default","createElement","className","Header","Header_Link","Spinner","style","width","height","Img","type","src","alt","DetailsContent","obj","_this$props$item","props","item","properties","objectWithoutProperties","Fragment","components_Img_Img","scope","mapPropertiesNames","Component","RandomPlanet","swapiService","state","error","onError","setState","onNoError","updatePlanet","interval","setInterval","bind","_this2","Math","floor","random","getResource","objectSpread","_this$state","isPlanetEmpty","values","isError","content","DetailsContent_DetailsContent","spinner","components_Spinner_Spinner","errorMsg","components_Error_Error","ItemList","peopleList","people","_this3","person","ItemList_ItemListLink","key","onClick","onItemSelected","prepareList","ItemListLink","PersonDetails","prevProps","fetchPerson","isItemSelected","PeoplePage","selectedPerson","hasError","onPersonSelected","errorInfo","ItemList_ItemList_ItemList","PersonDetails_PersonDetails_PersonDetails","App","isFetchInProgress","changeProgress","boolean","visibility","prototype","start","components_Header_Header","role","aria-valuenow","aria-valuemin","aria-valuemax","RandomPlanet_RandomPlanet_RandomPlanet","PeoplePage_PeoplePage","ReactDOM","render","App_App_App"],"mappings":"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","file":"static/js/main.e406d61e.chunk.js","sourcesContent":["class SwapiService {\n  _url = 'https://swapi.co/api';\n\n  async getResource(resource = 'people', id) {\n    const full_url = `${this._url}/${resource}/${id ? id : ''}`;\n    const res_full = await fetch(full_url);\n    return await res_full.json()\n      .then(async (body) => {\n        if (!res_full.ok) {\n          throw new Error(`Could not fetch ${full_url}, \\nstatus is ${res_full.status}`);\n        }\n        if (id) {\n          body.imageExists = await this.imageExists(resource, id);\n          return this.Decorator(resource, body);\n        }\n        return body.results\n          .map((el) => this.Decorator(resource, el));\n      })\n      .catch((err) => {\n        console.log(err.message);\n        throw err;\n      });\n  };\n\n  async imageExists(resource, id) {\n    const url =\n      `https://starwars-visualguide.com/assets/img/${resource}/${id}.jpg`;\n    const res = (await fetch(url)).status;\n\n    return res ? res !== 404 : false;\n  };\n\n\n\n  getId(objectToDecorate) {\n    return objectToDecorate.url.match(/\\/([0-9]*)\\/$/)[1]\n  };\n\n  Decorator(resource, objectToDecorate) {\n    switch (resource) {\n      case 'planets':\n        return {\n          id: this.getId(objectToDecorate),\n          name: objectToDecorate.name,\n          population: objectToDecorate.population,\n          rotationPeriod: objectToDecorate.rotation_period,\n          diameter: objectToDecorate.diameter,\n          imageExists: objectToDecorate.imageExists,\n          typeOfItem: 'planets'\n          };\n      case 'starships':\n        return {\n          id: this.getId(objectToDecorate),\n          name: objectToDecorate.name,\n          cargo_capacity: objectToDecorate.cargo_capacity,\n          passengers: objectToDecorate.passengers,\n          imageExists: objectToDecorate.imageExists,\n          typeOfItem: 'starships'\n        };\n      case 'people':\n        return {\n          id: this.getId(objectToDecorate),\n          name: objectToDecorate.name,\n          gender: objectToDecorate.gender,\n          mass: objectToDecorate.mass,\n          imageExists: objectToDecorate.imageExists,\n          typeOfItem: 'people'\n        };\n      default:\n        return objectToDecorate;\n    }\n  }\n}\n\nexport default SwapiService;","import './CssGoesOverChars.css';\n\nexport default class CssGoesOverChars {\n  start(elementId) {\n    const article = document.getElementById(elementId);\n    const text = article.innerHTML;\n    article.innerHTML = text.split('')\n      .map((char) => `<div class='char-item'>${char}</div>`)\n      .join('\\n');\n    article.classList.add('word-wrapper');\n\n    const nodes = document\n      .querySelector('.word-wrapper')\n      .children;\n\n    for (let i = 0, n = 0; i < text.length; i++) {\n      if (text.charAt(i) !== ' ') {\n        const invokeClassToggle = () => {\n          nodes[i].classList.add('char-active');\n          setTimeout(\n            () => nodes[i].classList.remove('char-active'),\n            1000\n          );\n\n          setTimeout(\n            invokeClassToggle,\n            text.replace(/ /g, '').length * 1000\n          );\n        };\n\n        setTimeout(\n          invokeClassToggle,\n          1000 + (n * 1000)\n        );\n\n        if (n < text.replace(/ /g, '').length) {\n          n++;\n        }\n      }\n    }\n  }\n};","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <ul className=\"nav nav-list-item-container\">\n        <Link href={\"#\"} title=\"People\"/>\n        <Link href={\"#\"} title=\"Planets\"/>\n        <Link href={\"#\"} title=\"Ships\"/>\n      </ul>\n    </header>\n  )\n};\n\nconst Link = ({href, title}) => {\n  return (\n    <li className=\"nav-item\">\n      <a className=\"nav-link nav-list-item\" href={href}>{title}</a>\n    </li>\n  )\n};\n\nexport default Header;","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css ng-scope mt-3\">\n      <div className=\"lds-spinner\" style={{width: '100%', height: '100%'}}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n};\n\nexport default Spinner;","import React from 'react';\n\nimport './Img.css';\n\nconst Img = ({type, id}) => {\n  const url = `https://starwars-visualguide.com/assets/img/${type}/${id}.jpg`;\n  return (\n    <div className='col-12 col-sm-6 d-flex justify-content-center align-items-center'>\n      <img\n        className='rounded my-2 random-planet-img'\n        src={url} alt=\"\"/>\n    </div>\n  )\n};\n\nexport default Img;","import React, {Component} from \"react\";\nimport Img from \"../Img/Img\";\n\n\nexport default class DetailsContent extends Component {\n  mapPropertiesNames(obj) {\n    if (obj.typeOfItem === \"people\") {\n      return [\n        ['Gender', obj.gender],\n        ['Mass', obj.mass],\n        ['Mass', obj.mass]\n      ];\n    } else if (obj.typeOfItem === \"planets\") {\n      return [\n        ['Population', obj.population],\n        ['Rotation Period', obj.rotationPeriod],\n        ['Diameter', obj.diameter]\n      ];\n    } else if (obj.typeOfItem === \"starships\") {\n      return [\n        ['Cargo Capacity', obj.cargo_capacity],\n        ['Passengers', obj.passengers],\n        ['Passengers', obj.passengers]\n      ];\n    }\n  }\n\n  render() {\n    const {id, name, ...properties} = this.props.item;\n    const imageExists = this.props.imageExists;\n\n    return (\n      <React.Fragment>\n        {imageExists ? <Img type={properties.typeOfItem} id={id}/> : null}\n        <div className='col-12 col-sm-6 d-flex flex-column justify-content-center align-content-middle'>\n          <header className='my-3'>\n            <span>{name}</span>\n          </header>\n          <table className=\"table table-hover\">\n            <tbody>\n            <tr className=\"table-active\">\n              <th scope=\"row\">\n                {this.mapPropertiesNames(properties)[0][0]}\n              </th>\n              <td>\n                {this.mapPropertiesNames(properties)[0][1]}\n              </td>\n            </tr>\n            <tr className=\"table-active\">\n              <th scope=\"row\">\n                {this.mapPropertiesNames(properties)[1][0]}\n              </th>\n              <td>\n                {this.mapPropertiesNames(properties)[1][1]}\n              </td>\n            </tr>\n            <tr className=\"table-active\">\n              <th scope=\"row\">\n                {this.mapPropertiesNames(properties)[2][0]}\n              </th>\n              <td>\n                {this.mapPropertiesNames(properties)[2][1]}\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div className='my-2 alert alert-dismissible alert-danger text-center'>\n      Something went wrong!\n    </div>\n  )\n};\n\nexport default Error;","import React, {Component} from 'react';\n\nimport SwapiService from '../../services/SwapiService/SwapiService';\nimport Spinner from '../Spinner/Spinner';\nimport DetailsContent from '../DetailsContent/DetailsContent';\nimport Error from '../Error/Error'\n\nimport './RandomPlanet.css';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    id: null,\n    name: null,\n    typeOfItem: null,\n    error: false,\n    imageExists: false\n  };\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(\n      this.updatePlanet.bind(this),\n      5000);\n  }\n\n  componentWillUnmount() {\n    this.interval = null;\n  }\n\n  onError = (err) => {\n    console.log(err);\n    this.setState({error: true});\n  };\n\n  onNoError = () => {\n    this.setState({error: false});\n  };\n\n  updatePlanet() {\n    const id = Math.floor(Math.random()*25) + 2;\n    this.swapiService\n      .getResource('planets', id)\n      .then((item) => {\n        this.setState({...item});\n        if (this.state.error) {\n          this.onNoError();\n        }\n      })\n      .catch((err) => this.onError(err));\n  };\n\n  render() {\n    const {error, imageExists, ...item} = this.state;\n    const isPlanetEmpty = !!Object.values(item).join('');\n    const isError = error;\n    const content = isPlanetEmpty\n      ? <DetailsContent\n        imageExists={imageExists}\n        item={{...item}}/>\n      : null;\n    const spinner = !isPlanetEmpty && !isError\n      ? <Spinner/>\n      : null;\n    const errorMsg = isError\n      ? <Error/>\n      : null;\n\n    return (\n      <article className='random-planet-content container bg-gray rounded'>\n        <div className='row d-flex justify-content-center align-items-center'>\n          {spinner}\n          {content}\n          {errorMsg}\n        </div>\n      </article>\n    )\n  }\n};","import React, {Component} from 'react';\nimport './ItemList.css';\nimport SwapiService from \"../../services/SwapiService/SwapiService\";\nimport Spinner from \"../Spinner/Spinner\"\n\nexport default class ItemList extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    peopleList: null\n  };\n\n  componentDidMount() {\n    this.swapiService\n      .getResource('people')\n      .then((people) => {\n        this.setState({peopleList: people});\n      })\n      .catch(this.onError);\n  }\n\n  prepareList() {\n    if (this.state.peopleList) {\n      return this.state.peopleList.map((person) => {\n        return (\n          <ItemListLink\n            key={person.id}\n            href={\"#\"}\n            title={person.name}\n            id={person.id}\n            onClick={() => this.props.onItemSelected(person.id)}\n          />\n        )\n      })\n    }\n  }\n\n  render() {\n    const { peopleList } = this.state;\n    const content = peopleList ? this.prepareList() : null;\n    const spinner = !peopleList ? <Spinner/> : null;\n\n    return (\n      <article className='itemList my-2'>\n        <ul className='list-group'>\n          {spinner}\n          {content}\n        </ul>\n      </article>\n    )\n  }\n}\n\nconst ItemListLink = ({title, onClick}) => {\n  return (\n    <li\n      onClick={onClick}\n      className='list-group-item d-flex justify-content-between align-items-center hover-color'>\n      <div className='item-list-item-link'>\n        {title}\n      </div>\n    </li>\n  )\n};","import React, {Component} from 'react';\n\nimport SwapiService from '../../services/SwapiService/SwapiService';\nimport Spinner from '../Spinner/Spinner';\nimport DetailsContent from '../DetailsContent/DetailsContent';\n\nimport './PersonDetails.css';\n\nexport default class PersonDetails extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    id: null,\n    name: null,\n    typeOfItem: null,\n    error: false,\n    imageExists: false\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.id !== prevProps.id) {\n      this.fetchPerson();\n    }\n  };\n\n  onError = (err) => {\n    console.log(err);\n    this.setState({error: true});\n  };\n\n  onNoError = () => {\n    this.setState({error: false});\n  };\n\n  fetchPerson() {\n    const id = this.props.id;\n    this.swapiService\n      .getResource('people', id)\n      .then((item) => {\n        this.setState({...item});\n        if (this.state.error) {\n          this.onNoError();\n        }\n      })\n      .catch((err) => this.onError(err));\n  };\n\n  render() {\n    const {error, imageExists, ...item} = this.state;\n    const isPlanetEmpty = !!Object.values(item).join('');\n    const isError = error;\n    const isItemSelected = this.props.id;\n    const content = isPlanetEmpty\n      ? <DetailsContent\n        imageExists={imageExists}\n        item={{...item}}/>\n      : null;\n    const spinner = !isPlanetEmpty && !isError && isItemSelected\n      ? <Spinner/>\n      : null;\n    const errorMsg = isError\n      ? <div>An error occurred</div>\n      : null;\n\n    return (\n      <article className='person-details container bg-gray rounded'>\n        <div className='my-2 row d-flex justify-content-center align-items-center'>\n          {spinner}\n          {content}\n          {errorMsg}\n        </div>\n      </article>\n    )\n  }\n}","import React, { Component } from 'react';\nimport ItemList from '../ItemList/ItemList';\nimport PersonDetails from '../PersonDetails/PersonDetails';\nimport Error from '../Error/Error'\n\nexport default class PeoplePage extends Component {\n\n  state = {\n    selectedPerson: null,\n    hasError: false\n  };\n\n  onPersonSelected = (id) => {\n    this.setState({\n      selectedPerson: id\n    })\n  };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      hasError: true\n    })\n  }\n\n  render() {\n\n    if (this.state.hasError) {\n      return <Error/>\n    }\n\n    return (\n      <div className='row mb2'>\n        <div className='col-md-6'>\n          <ItemList onItemSelected={this.onPersonSelected}/>\n        </div>\n        <div className='col-md-6'>\n          <PersonDetails id={this.state.selectedPerson}/>\n        </div>\n      </div>\n    )\n  }\n};","import React, {Component} from 'react';\nimport SwapiService from '../../services/SwapiService/SwapiService';\nimport CssGoesOverChars from '../../services/CssGoesOverChars/CssGoesOverChars';\nimport Header from '../Header/Header';\nimport RandomPlanet from \"../RandomPlanet/RandomPlanet\";\nimport PeoplePage from '../PeoplePage/PeoplePage';\n\nimport './App.css';\n\nexport default class App extends Component {\n\n  isFetchInProgress = false;\n\n  changeProgress = (boolean) => {\n    this.isFetchInProgress = boolean;\n    if (document.getElementById('progress')) {\n      document.getElementById('progress')\n        .style.visibility = this.isFetchInProgress ? 'visible' : 'hidden';\n    }\n  };\n\n  componentDidMount() {\n    CssGoesOverChars.prototype.start('dynamicText');\n  };\n\n  render() {\n    this.changeProgress(true);\n    (new SwapiService()).getResource('planets')\n      .then((body) => {\n        this.changeProgress(false);\n        console.log(body);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        this.changeProgress(false);\n      });\n\n    return (\n      <div className='app container'>\n        <article\n          id='dynamicText'\n          className='my-3'\n        >Star Wars Database</article>\n        <Header/>\n        <div  className='d-flex justify-content-center align-items-center m-3'>\n          <div\n            className=\"progress\"\n            style={{width: '35%'}}\n            id='progress'\n          >\n            <div\n              className=\"progress-bar progress-bar-striped progress-bar-animated\"\n              role=\"progressbar\"\n              aria-valuenow=\"75\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{width: '100%'}}\n            > </div>\n          </div>\n        </div>\n\n        <RandomPlanet/>\n\n        <PeoplePage/>\n      </div>\n    )\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}